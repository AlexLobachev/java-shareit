
--DROP TABLE IF EXISTS REQUESTS;
--DROP TABLE IF EXISTS  ITEM;

DROP TABLE IF EXISTS BOOKING;
DROP TABLE IF EXISTS COMMENTS;
DROP TABLE IF EXISTS  ITEM cascade ;
DROP TABLE IF EXISTS REQUESTS cascade;
DROP TABLE IF EXISTS USERS;






CREATE TABLE IF NOT EXISTS USERS (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
        UNIQUE (email),
        CONSTRAINT owner_id PRIMARY KEY(id)
    );

CREATE TABLE IF NOT EXISTS REQUESTS(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255) NOT NULL,
    requestor INTEGER REFERENCES USERS (id),
    created TIMESTAMP,
    CONSTRAINT request_id PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS ITEM(
     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     name VARCHAR(255) NOT NULL,
     description VARCHAR(255) NOT NULL,
     available BOOLEAN,
     CONSTRAINT item_id PRIMARY KEY(id),
     owner_id INTEGER REFERENCES USERS (id),
     request_id INTEGER
     --request_id INTEGER REFERENCES REQUESTS (id)

);

CREATE TABLE IF NOT EXISTS BOOKING(
     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     start_time TIMESTAMP,
     end_time TIMESTAMP,
     item_id INTEGER REFERENCES ITEM (id),
     owner_id INTEGER REFERENCES USERS (id),
     status VARCHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS COMMENTS(
     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     comments VARCHAR(255) NOT NULL,
     author_name VARCHAR(255) NOT NULL,
     item_id INTEGER REFERENCES ITEM (id)
);

--SELECT request_id,REQUESTS.description,created,i.description
--from REQUESTS
--INNER JOIN ITEM I on REQUESTS.id = I.request_id group by request_id, REQUESTS.description, created, i.description;
--
--SELECT * from REQUESTS inner join ITEM I on REQUESTS.id = I.request_id;
--
--SELECT * from ITEM INNER  JOIN REQUESTS R on ITEM.request_id = R.id where requestor = 1;
--
--
--SELECT  r.id,r.description,r.created,ITEM.description from ITEM inner join REQUESTS R on R.id = ITEM.request_id group by r.requestor, ITEM.description, r.created, r.description, r.id;
--
--SELECT * from ITEM INNER JOIN REQUESTS R on ITEM.request_id = R.id where requestor = 1;
--
--SELECT * from ITEM left join REQUESTS R on r.requestor = R.id where requestor = 1;
--
--SELECT * from ITEM left join REQUESTS R on request_id = r.id where requestor = 1;

select * from BOOKING left join ITEM I on I.id = BOOKING.item_id where I.owner_id =4